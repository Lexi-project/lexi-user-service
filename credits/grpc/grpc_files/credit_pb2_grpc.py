# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import credit_pb2 as credit__pb2

class CreditServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BorrowCredit = channel.unary_unary(
                '/credit.CreditService/BorrowCredit',
                request_serializer=credit__pb2.BorrowCreditRequest.SerializeToString,
                response_deserializer=credit__pb2.BorrowCreditResponse.FromString,
                )
        self.RollbackCredit = channel.unary_unary(
                '/credit.CreditService/RollbackCredit',
                request_serializer=credit__pb2.RollbackCreditRequest.SerializeToString,
                response_deserializer=credit__pb2.RollbackCreditResponse.FromString,
                )
        self.CommitCredit = channel.unary_unary(
                '/credit.CreditService/CommitCredit',
                request_serializer=credit__pb2.CommitCreditRequest.SerializeToString,
                response_deserializer=credit__pb2.CommitCreditResponse.FromString,
                )


class CreditServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BorrowCredit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RollbackCredit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitCredit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CreditServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BorrowCredit': grpc.unary_unary_rpc_method_handler(
                    servicer.BorrowCredit,
                    request_deserializer=credit__pb2.BorrowCreditRequest.FromString,
                    response_serializer=credit__pb2.BorrowCreditResponse.SerializeToString,
            ),
            'RollbackCredit': grpc.unary_unary_rpc_method_handler(
                    servicer.RollbackCredit,
                    request_deserializer=credit__pb2.RollbackCreditRequest.FromString,
                    response_serializer=credit__pb2.RollbackCreditResponse.SerializeToString,
            ),
            'CommitCredit': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitCredit,
                    request_deserializer=credit__pb2.CommitCreditRequest.FromString,
                    response_serializer=credit__pb2.CommitCreditResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'credit.CreditService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CreditService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BorrowCredit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.CreditService/BorrowCredit',
            credit__pb2.BorrowCreditRequest.SerializeToString,
            credit__pb2.BorrowCreditResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RollbackCredit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.CreditService/RollbackCredit',
            credit__pb2.RollbackCreditRequest.SerializeToString,
            credit__pb2.RollbackCreditResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitCredit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.CreditService/CommitCredit',
            credit__pb2.CommitCreditRequest.SerializeToString,
            credit__pb2.CommitCreditResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
